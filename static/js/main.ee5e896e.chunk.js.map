{"version":3,"sources":["components/Home/DataPanels.js","components/Home/Dropdown.js","components/Home/Loader.js","Redux/actions/ErrorActions.js","Redux/actions/ActionTypes.js","Redux/actions/ActionCreators.js","components/Home/Header.js","components/Home/CountryData.js","components/Home/Graph.js","components/Modal.js","components/Home/Home.js","components/LeftSidebar.js","components/Map.js","components/Footer.js","components/TopAffectedCountry.js","components/Info.js","App.js","serviceWorker.js","Redux/reducers/isLoading.js","Redux/reducers/countries.js","Redux/reducers/countryData.js","Redux/reducers/historicalData.js","Redux/reducers/error.js","Redux/reducers/topAffectedCountries.js","Redux/reducers/index.js","Redux/store.js","index.js"],"names":["DataPanel","title","data","className","aria-hidden","end","connect","state","cases","countryData","deaths","recovered","Dropdown","props","toggle","setState","active","selectItem","e","selected","target","innerText","setSelectedCountry","countries","onClick","this","selectedCountry","href","map","item","key","React","Component","Loader","getErrors","error","type","payload","setLoading","isLoading","getCountries","dispatch","axios","get","then","res","country","catch","err","catchErrors","getCountryData","filteredCountry","filter","toLowerCase","simpleData","name","todayCases","todayDeaths","todayRecovered","critical","flag","countryInfo","getHistoricalData","encodeURI","caseData","getMonthlyData","timeline","deathsData","recoveredData","monthNames","monthlyData","i","monthDays","Object","keys","date","split","lastDateOfMonth","length","monthData","month","caseTypeData","push","sortData","sort","a","b","response","id","request","useState","src","alt","historicalData","countryName","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","options","responsive","maintainAspectRatio","legend","display","text","fontSize","clearErrors","ReactDOM","createPortal","isError","preventDefault","document","querySelector","Home","withRouter","history","location","pathname","substring","selectedLink","setSelectedLink","to","Map","setCountries","latitude","longitude","width","height","zoom","viewport","setViewport","useEffect","fetch","json","listener","window","addEventListener","removeEventListener","mapStyle","mapboxApiAccessToken","process","onViewportChange","lat","long","onClose","Footer","role","aria-label","rel","topAffectedCountries","index","Info","getTopAffectedCountries","sortedData","path","component","exact","TopAffectedCountry","Boolean","hostname","match","action","initialState","errors","combineReducers","middlewares","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","console","log","getState","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee5e896e.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CountUp from \"react-countup\";\n\nconst DataPanel = ({ title, data }) => {\n  return (\n    <div className=\"datapanel\">\n      <div className=\"icon\">\n        <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\n      </div>\n      <div className=\"data\">\n        <h3>{title}</h3>\n        <h2>\n          <CountUp end={data} />\n        </h2>\n      </div>\n    </div>\n  );\n};\n\nfunction DataPanels({ cases, deaths, recovered }) {\n  return (\n    <div className=\"datapanels_wrapper\">\n      <DataPanel title=\"Cases\" data={cases} />\n      <DataPanel title=\"Recovered\" data={deaths} />\n      <DataPanel title=\"Deaths\" data={recovered} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cases: state.countryData.cases,\n    deaths: state.countryData.deaths,\n    recovered: state.countryData.recovered,\n  };\n};\n\nexport default connect(mapStateToProps)(DataPanels);\n","import React from \"react\";\n\nconst List = ({ countries, selected, selectItem }) => {\n  return (\n    <>\n      {countries.map((item) => (\n        <li\n          key={item}\n          onClick={selectItem}\n          className={selected === item ? \"selected\" : \"\"}\n        >\n          {item}\n        </li>\n      ))}\n    </>\n  );\n};\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      active: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({ active: !this.state.active });\n  };\n\n  selectItem = (e) => {\n    const selected = e.target.innerText;\n    this.props.setSelectedCountry(selected);\n\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div className=\"dropdown\" onClick={this.toggle}>\n        <p>{this.props.selectedCountry}</p>\n        <a\n          href=\"#!\"\n          className={`dropdown_toggler ${this.state.active ? \" up\" : \" down\"}`}\n          onClick={this.toggle}\n        >\n          <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\n        </a>\n        <ul className={this.state.active ? \"active\" : \"\"}>\n          {this.props.countries.map((item) => (\n            <li\n              key={item}\n              onClick={this.selectItem}\n              className={this.props.selectedCountry === item ? \"selected\" : \"\"}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Loader = () => {\n  return <div className=\"spinner\"></div>;\n};\n\nexport default Loader;\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./ActionTypes\";\n\n// Action creator to dispatch a get error action\nexport const getErrors = (error) => {\n  return {\n    type: GET_ERRORS,\n    payload: error,\n  };\n};\n\n// Action creator to dispatch a clear errors action\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n","export const SET_IS_LOADING = \"SET_IS_LOADING\";\nexport const GET_COUNTRY_DATA = \"GET_COUNTRY_DATA\";\nexport const GET_HISTORICAL_DATA = \"GET_HISTORICAL_DATA\";\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\nexport const GET_TOP_AFFECTED_COUNTRIES = \"GET_TOP_AFFECTED_COUNTRIES\";\n\n// Error related actions\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import {\n  SET_IS_LOADING,\n  GET_COUNTRIES,\n  GET_COUNTRY_DATA,\n  GET_HISTORICAL_DATA,\n  GET_TOP_AFFECTED_COUNTRIES,\n} from \"./ActionTypes\";\nimport axios from \"axios\";\nimport { getErrors } from \"./ErrorActions\";\n\n// Set loading state\nexport const setLoading = (isLoading) => {\n  return { type: SET_IS_LOADING, payload: isLoading };\n};\n\n//  Get all the countries\nexport const getCountries = () => (dispatch) => {\n  // First set loading to true\n  dispatch(setLoading(true));\n\n  axios\n    .get(\"https://disease.sh/v3/covid-19/countries\")\n    .then((res) => {\n      dispatch({\n        type: GET_COUNTRIES,\n        payload: res.data.map((item) => item.country),\n      });\n\n      // disable loading\n      dispatch(setLoading(false));\n    })\n    .catch((err) => catchErrors(err, dispatch));\n};\n\n// To get some info about country\nexport const getCountryData = (country = \"India\") => (dispatch) => {\n  // set loading to true\n  dispatch(setLoading(true));\n\n  axios\n    .get(\"https://disease.sh/v3/covid-19/countries\")\n    .then((res) => {\n      const filteredCountry = res.data.filter(\n        (data) => data.country.toLowerCase() === country.toLowerCase()\n      )[0];\n\n      const simpleData = {\n        name: filteredCountry.country,\n        todayCases: filteredCountry.todayCases,\n        todayDeaths: filteredCountry.todayDeaths,\n        todayRecovered: filteredCountry.todayRecovered,\n        active: filteredCountry.active,\n        critical: filteredCountry.critical,\n        cases: filteredCountry.cases,\n        deaths: filteredCountry.deaths,\n        recovered: filteredCountry.recovered,\n        flag: filteredCountry.countryInfo.flag,\n      };\n      dispatch({ type: GET_COUNTRY_DATA, payload: simpleData });\n      dispatch(setLoading(false));\n    })\n    .catch((err) => catchErrors(err, dispatch));\n};\n\n// To get country's historical data\nexport const getHistoricalData = (country = \"India\") => (dispatch) => {\n  // set loading to true\n  dispatch(setLoading(true));\n\n  axios\n    .get(\n      `https://disease.sh/v3/covid-19/historical/${encodeURI(\n        country\n      )}?lastdays=365`\n    )\n    .then(({ data }) => {\n      const caseData = getMonthlyData(data.timeline.cases);\n      const deathsData = getMonthlyData(data.timeline.deaths);\n      const recoveredData = getMonthlyData(data.timeline.recovered);\n\n      dispatch({\n        type: GET_HISTORICAL_DATA,\n        payload: { caseData, deathsData, recoveredData },\n      });\n      dispatch(setLoading(false));\n    })\n    .catch((err) => catchErrors(err, dispatch));\n};\n\n// Calculate each month's data for each case type\nconst getMonthlyData = (data) => {\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  let monthlyData = [];\n\n  for (let i = 0; i < monthNames.length; i++) {\n    let monthDays = Object.keys(data).filter(\n      (date) => date.split(\"/\")[0] == i + 1\n    );\n    let lastDateOfMonth = monthDays[monthDays.length - 1];\n\n    let monthData = {\n      month: monthNames[i],\n      caseTypeData: data[lastDateOfMonth],\n    };\n\n    monthlyData.push(monthData);\n  }\n\n  return monthlyData;\n};\n\n// Get all the top affected countries\nexport const getTopAffectedCountries = (countries) => (dispatch) => {\n  // set loading to true\n  dispatch(setLoading(true));\n\n  axios.get(\"https://disease.sh/v3/covid-19/countries\").then((res) => {\n    const sortedData = sortData(res.data);\n    dispatch({ type: GET_TOP_AFFECTED_COUNTRIES, payload: sortedData });\n    dispatch(setLoading(false));\n  });\n};\n\n// sort the affected countries data\nconst sortData = (countries) => countries.sort((a, b) => a.cases < b.cases);\n\n// To catch fetching data errors\nconst catchErrors = (err, dispatch) => {\n  if (err.response) {\n    dispatch(\n      getErrors({\n        id: \"SOMETHING_WENT_WRONG\",\n        err: \"Oops..Something went Wrong\",\n      })\n    );\n  } else if (err.request && !err.response) {\n    dispatch(\n      getErrors({\n        id: \"NETWORK_ERROR\",\n        err: \"Network Error...Please try again!\",\n      })\n    );\n  }\n};\n","import React, { useState } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport Loader from \"./Loader\";\nimport { connect } from \"react-redux\";\nimport {\n  getCountryData,\n  getHistoricalData,\n} from \"../../Redux/actions/ActionCreators\";\n\nfunction Header({\n  isLoading,\n  getCountryData,\n  countries,\n  getHistoricalData,\n  name,\n}) {\n  // selected country state\n  const [selectedCountry, setSelectedCountry] = useState(name);\n\n  // search selected country Data\n  const searchCountryData = (country) => {\n    // Get country data\n    getCountryData(country);\n\n    // Get country's historical data\n    getHistoricalData(country);\n  };\n\n  return (\n    <header>\n      <h2>Corona Tracker</h2>\n      <div className=\"actions\">\n        {isLoading && <Loader />}\n        <Dropdown\n          countries={countries}\n          selectedCountry={selectedCountry}\n          setSelectedCountry={setSelectedCountry}\n        />\n        <button\n          className=\"primary-btn\"\n          onClick={() => searchCountryData(selectedCountry)}\n        >\n          Go!\n        </button>\n      </div>\n    </header>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.isLoading,\n    countries: state.countries,\n    name: state.countryData.name,\n  };\n};\n\nexport default connect(mapStateToProps, { getCountryData, getHistoricalData })(\n  Header\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction CountryData({\n  name,\n  todayCases,\n  todayDeaths,\n  todayRecovered,\n  active,\n  critical,\n  flag,\n}) {\n  return (\n    <div className=\"country_data\">\n      <div className=\"country_info\">\n        <h1>{name}'s Info</h1>\n        <ul>\n          <li>\n            <strong>Country Name</strong> - {name}\n          </li>\n          <li>\n            <strong>Today's Cases</strong> - {todayCases}\n          </li>\n          <li>\n            <strong>Today's Death</strong> - {todayDeaths}\n          </li>\n          <li>\n            <strong>Today's Recovered</strong> - {todayRecovered}\n          </li>\n          <li>\n            <strong>Active</strong> - {active}\n          </li>\n          <li>\n            <strong>Critical</strong> - {critical}\n          </li>\n        </ul>\n      </div>\n      <div className=\"country_icon\">\n        <img src={flag} alt=\"Country Flag\" />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    name: state.countryData.name,\n    todayCases: state.countryData.todayCases,\n    todayDeaths: state.countryData.todayDeaths,\n    todayRecovered: state.countryData.todayRecovered,\n    active: state.countryData.active,\n    critical: state.countryData.critical,\n    flag: state.countryData.flag,\n  };\n};\n\nexport default connect(mapStateToProps)(CountryData);\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\n\nfunction Graph({ cases, deaths, recovered, countryName }) {\n  // Chart configuration\n\n  const data = {\n    labels: cases.map((data) => data.month),\n    datasets: [\n      {\n        label: \"Cases\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"#ff1f2d\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#ff1f2d\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 6,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        pointHitRadius: 10,\n        data: cases.map((data) => data.caseTypeData),\n      },\n      {\n        label: \"Deaths\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"#ff1f2d\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#ff1f2d\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 6,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        pointHitRadius: 10,\n        data: deaths.map((data) => data.caseTypeData),\n      },\n      {\n        label: \"Recovered\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"#ff1f2d\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"#ff1f2d\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 6,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        pointHitRadius: 10,\n        data: recovered.map((data) => data.caseTypeData),\n      },\n    ],\n  };\n\n  return (\n    <div className=\"graph_container\">\n      <Line\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            display: false,\n          },\n          title: {\n            display: true,\n            text: `${countryName}'s  data`,\n            fontSize: 25,\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cases: state.historicalData.caseData,\n    deaths: state.historicalData.deathsData,\n    recovered: state.historicalData.recoveredData,\n    countryName: state.countryData.name,\n  };\n};\n\nexport default connect(mapStateToProps)(Graph);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { clearErrors } from \"../Redux/actions/ErrorActions\";\nimport {\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n} from \"../Redux/actions/ActionCreators\";\n\nfunction Modal({\n  error,\n  clearErrors,\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n}) {\n  // To close modal\n  const closeModal = (e) => {\n    e.preventDefault();\n\n    // Close modal\n    clearErrors();\n  };\n\n  // Retry fetching data\n  const retryFetching = () => {\n    // close the Modal\n    clearErrors();\n\n    // Get all countries\n    getCountries();\n\n    // Get historical data\n    getHistoricalData();\n\n    // Get country data\n    getCountryData();\n  };\n\n  return ReactDOM.createPortal(\n    error.isError ? (\n      <div className=\"modal-bg\">\n        <div className=\"modal-content\">\n          <a href=\"\" className=\"close-modal\" onClick={closeModal}>\n            &times;\n          </a>\n          <h1>Oops....</h1>\n          <p>{error.err}</p>\n          <button className=\"primary-btn\" onClick={retryFetching}>\n            Retry\n          </button>\n        </div>\n      </div>\n    ) : null,\n    document.querySelector(\"#modal\")\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.error,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n})(Modal);\n","import React from \"react\";\nimport DataPanels from \"./DataPanels\";\nimport Header from \"./Header\";\nimport CountryData from \"./CountryData\";\nimport Graph from \"./Graph\";\nimport Modal from \"../Modal\";\n\nfunction Home() {\n  return (\n    <div className=\"home-wrapper\">\n      <Modal />\n      <Header />\n      <DataPanels />\n      <CountryData />\n      <Graph />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nfunction LeftSidebar({ history }) {\n  const [selectedLink, setSelectedLink] = useState(\n    history.location.pathname.substring(1)\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <ul>\n        <Link to=\"/\" onClick={() => setSelectedLink(\"\")}>\n          <li className={`${selectedLink === \"\" ? \"active\" : \"\"}`}>\n            <i className=\"fa fa-home\"></i>\n          </li>\n        </Link>\n        <Link to=\"/map\" onClick={() => setSelectedLink(\"map\")}>\n          <li className={`${selectedLink === \"map\" ? \"active\" : \"\"}`}>\n            <i className=\"fa fa-map-marker\"></i>\n          </li>\n        </Link>\n        <Link to=\"/countries\" onClick={() => setSelectedLink(\"globe\")}>\n          <li className={`${selectedLink === \"globe\" ? \"active\" : \"\"}`}>\n            <i className=\"fa fa-globe\"></i>\n          </li>\n        </Link>\n        <Link to=\"/info\" onClick={() => setSelectedLink(\"info\")}>\n          <li className={`${selectedLink === \"info\" ? \"active\" : \"\"}`}>\n            <i className=\"fa fa-info\"></i>\n          </li>\n        </Link>\n      </ul>\n    </div>\n  );\n}\n\nexport default withRouter(LeftSidebar);\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\nexport default function Map() {\n  const [countries, setCountries] = useState([]);\n  const [viewport, setViewport] = useState({\n    latitude: 20,\n    longitude: 77,\n    width: \"88vw\",\n    height: \"100vh\",\n    zoom: 1,\n  });\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  useEffect(() => {\n    // fetching data\n    const fetchData = () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((res) => res.json())\n        .then((res) => setCountries(res));\n    };\n\n    fetchData();\n\n    const listener = (e) => {\n      if (e.key === \"Escape\") {\n        setSelectedCountry(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div className=\"map_container\">\n      <ReactMapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/shaanalam/ckili38cz0c1f18se6ym09vrf\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        onViewportChange={(viewport) => setViewport(viewport)}\n      >\n        {countries.map((data) => (\n          <Marker\n            key={data.country}\n            latitude={data.countryInfo.lat}\n            longitude={data.countryInfo.long}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setSelectedCountry(data);\n              }}\n            >\n              <div className=\"circle\"></div>\n            </button>\n          </Marker>\n        ))}\n        {selectedCountry && (\n          <Popup\n            className=\"popup_wrapper\"\n            latitude={selectedCountry.countryInfo.lat}\n            longitude={selectedCountry.countryInfo.long}\n            onClose={() => setSelectedCountry(null)}\n          >\n            <div className=\"popup\">\n              <h4>{selectedCountry.country}</h4>\n              <img src={selectedCountry.countryInfo.flag} alt=\"\" />\n              <ul>\n                <li>Cases - {selectedCountry.cases}</li>\n                <li>Deaths - {selectedCountry.deaths}</li>\n                <li>Recovered - {selectedCountry.recovered}</li>\n              </ul>\n            </div>\n          </Popup>\n        )}\n      </ReactMapGL>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<p>\n\t\t\t\tMade with{\" \"}\n\t\t\t\t<span role=\"img\" aria-label=\"emoji\">\n\t\t\t\t\t❤️\n\t\t\t\t</span>{\" \"}\n\t\t\t\tby{\" \"}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://www.instagram.com/__iamshaan/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tShaan Alam\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</footer>\n\t);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction TopAffectedCountry({ topAffectedCountries }) {\n  return (\n    <div className=\"top_affected_countries\">\n      <div className=\"countries\">\n        {topAffectedCountries.map((data, index) => (\n          <div className=\"country\" key={data.country}>\n            <div className=\"country_img\">\n              <img src={data.countryInfo.flag} alt=\"\" />\n            </div>\n            <div className=\"country_info\">\n              <h6>#{index + 1}</h6>\n              <h3>{data.country}</h3>\n              <h6>Cases: {data.cases}</h6>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    topAffectedCountries: state.topAffectedCountries,\n  };\n};\n\nexport default connect(mapStateToProps)(TopAffectedCountry);\n","import React from \"react\";\n\nexport default function Info() {\n  return (\n    <div className=\"info\">\n      <div className=\"info_header\">\n        <h1>Corona Virus </h1>\n        <h2>\n          Protect yourself and others around you by knowing the facts and taking\n          appropriate precautions. Follow advice provided by your local health\n          authority.\n        </h2>\n      </div>\n      <div className=\"info_content\">\n        <h4>To prevent the spread of COVID-19:</h4>\n        <ul>\n          <li>\n            Clean your hands often. Use soap and water, or an alcohol-based hand\n            rub.\n          </li>\n          <li>\n            Maintain a safe distance from anyone who is coughing or sneezing.\n          </li>\n          <li>Wear a mask when physical distancing is not possible.</li>\n          <li>Don’t touch your eyes, nose or mouth.</li>\n          <li>\n            Cover your nose and mouth with your bent elbow or a tissue when you\n            cough or sneeze.\n          </li>\n          <li>Stay home if you feel unwell.</li>\n          <li>\n            If you have a fever, cough and difficulty breathing, seek medical\n            attention.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport LeftSidebar from \"./components/LeftSidebar\";\nimport { connect } from \"react-redux\";\nimport {\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n} from \"./Redux/actions/ActionCreators\";\nimport Map from \"./components/Map\";\nimport Footer from \"./components/Footer\";\nimport { getTopAffectedCountries } from \"./Redux/actions/ActionCreators\";\nimport TopAffectedCountry from \"./components/TopAffectedCountry\";\nimport Info from \"./components/Info\";\n\nfunction App({\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n  getTopAffectedCountries,\n}) {\n  useEffect(() => {\n    getCountries();\n    getCountryData();\n    getHistoricalData();\n    getTopAffectedCountries();\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"App__left\">\n          <LeftSidebar />\n        </div>\n        <div className=\"App__right\">\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/map\" component={Map} />\n            <Route path=\"/countries\" component={TopAffectedCountry} />\n            <Route path=\"/info\" component={Info} />\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.isLoading,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCountries,\n  getCountryData,\n  getHistoricalData,\n  getTopAffectedCountries,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_IS_LOADING } from \"../actions/ActionTypes\";\n\nfunction isLoading(state = false, action) {\n  switch (action.type) {\n    case SET_IS_LOADING:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default isLoading;\n","import { GET_COUNTRIES } from \"../actions/ActionTypes\";\n\nfunction countries(state = [], action) {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default countries;\n","import { GET_COUNTRY_DATA } from \"../actions/ActionTypes\";\n\nconst initialState = {\n  name: null,\n  todayCases: null,\n  todayDeaths: null,\n  todayRecovered: null,\n  active: null,\n  critical: null,\n  cases: null,\n  deaths: null,\n  recovered: null,\n};\n\nfunction countryData(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRY_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default countryData;\n","import { GET_HISTORICAL_DATA } from \"../actions/ActionTypes\";\n\nconst initialState = {\n  caseData: [],\n  deathsData: [],\n  recoveredData: [],\n};\n\nfunction historicalData(state = initialState, action) {\n  switch (action.type) {\n    case GET_HISTORICAL_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default historicalData;\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/ActionTypes\";\n\nconst initialState = {\n  isError: false,\n  id: \"\",\n  err: \"\",\n};\n\nfunction errors(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        ...state,\n        isError: true,\n        ...action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        id: \"\",\n        isError: false,\n        err: \"\",\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default errors;\n","import { GET_TOP_AFFECTED_COUNTRIES } from \"../actions/ActionTypes\";\n\nconst initialState = [];\n\nfunction topAffectedCountries(state = initialState, action) {\n  switch (action.type) {\n    case GET_TOP_AFFECTED_COUNTRIES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default topAffectedCountries;\n","import { combineReducers } from \"redux\";\nimport isLoading from \"./isLoading\";\nimport countries from \"./countries\";\nimport countryData from \"./countryData\";\nimport historicalData from \"./historicalData\";\nimport error from \"./error\";\nimport topAffectedCountries from \"./topAffectedCountries\";\n\nexport default combineReducers({\n  isLoading,\n  countries,\n  countryData,\n  historicalData,\n  error,\n  topAffectedCountries,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./assets/scss/styles.scss\";\n\n// React router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}