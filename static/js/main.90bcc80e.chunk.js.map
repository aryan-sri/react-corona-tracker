{"version":3,"sources":["components/Home/DataPanels.js","components/Home/Dropdown.js","components/Home/Loader.js","Redux/actions/ErrorActions.js","Redux/actions/ActionTypes.js","Redux/actions/ActionCreators.js","components/Home/Header.js","components/Home/CountryData.js","components/Home/Graph.js","components/Modal.js","components/Home/Home.js","components/LeftSidebar.js","components/Map.js","components/Footer.js","components/TopAffectedCountry.js","components/Info.js","App.js","serviceWorker.js","Redux/reducers/isLoading.js","Redux/reducers/countries.js","Redux/reducers/countryData.js","Redux/reducers/historicalData.js","Redux/reducers/error.js","Redux/reducers/topAffectedCountries.js","Redux/reducers/selectedCountry.js","Redux/reducers/index.js","Redux/store.js","index.js"],"names":["DataPanel","title","data","className","aria-hidden","end","connect","state","cases","countryData","deaths","recovered","Dropdown","props","toggle","setState","active","selectItem","e","selected","target","innerText","setSelectedCountry","countries","onClick","this","selectedCountry","href","map","item","key","React","Component","Loader","getErrors","error","type","payload","setLoading","isLoading","getCountries","dispatch","axios","get","then","res","country","catch","err","catchErrors","getCountryData","filteredCountry","filter","toLowerCase","simpleData","name","todayCases","todayDeaths","todayRecovered","critical","flag","countryInfo","getHistoricalData","encodeURI","caseData","getMonthlyData","timeline","deathsData","recoveredData","monthNames","monthlyData","i","monthDays","Object","keys","date","split","lastDateOfMonth","length","monthData","month","caseTypeData","push","sortData","sort","a","b","response","id","request","src","alt","historicalData","countryName","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","options","responsive","maintainAspectRatio","legend","display","text","fontSize","clearErrors","ReactDOM","createPortal","isError","preventDefault","document","querySelector","Home","withRouter","history","useState","location","pathname","substring","selectedLink","setSelectedLink","to","process","Map","setCountries","latitude","longitude","width","height","zoom","viewport","setViewport","useEffect","fetch","json","listener","window","addEventListener","removeEventListener","mapStyle","mapboxApiAccessToken","onViewportChange","lat","long","onClose","Footer","role","aria-label","rel","topAffectedCountries","index","Info","getTopAffectedCountries","sortedData","slice","path","component","exact","TopAffectedCountry","Boolean","hostname","match","action","initialState","errors","combineReducers","middlewares","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","console","log","getState","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.90bcc80e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst DataPanel = ({ title, data }) => {\r\n  return (\r\n    <div className=\"datapanel\">\r\n      <div className=\"icon\">\r\n        <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"data\">\r\n        <h3>{title}</h3>\r\n        <h2>\r\n          <CountUp end={data} />\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction DataPanels({ cases, deaths, recovered }) {\r\n  return (\r\n    <div className=\"datapanels_wrapper\">\r\n      <DataPanel title=\"Cases\" data={cases} />\r\n      <DataPanel title=\"Recovered\" data={deaths} />\r\n      <DataPanel title=\"Deaths\" data={recovered} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cases: state.countryData.cases,\r\n    deaths: state.countryData.deaths,\r\n    recovered: state.countryData.recovered,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DataPanels);\r\n","import React from \"react\";\r\n\r\nconst List = ({ countries, selected, selectItem }) => {\r\n  return (\r\n    <>\r\n      {countries.map((item) => (\r\n        <li\r\n          key={item}\r\n          onClick={selectItem}\r\n          className={selected === item ? \"selected\" : \"\"}\r\n        >\r\n          {item}\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nclass Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countries: [],\r\n      active: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ active: !this.state.active });\r\n  };\r\n\r\n  selectItem = (e) => {\r\n    const selected = e.target.innerText;\r\n    this.props.setSelectedCountry(selected);\r\n\r\n    this.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\" onClick={this.toggle}>\r\n        <p>{this.props.selectedCountry}</p>\r\n        <a\r\n          href=\"#!\"\r\n          className={`dropdown_toggler ${this.state.active ? \" up\" : \" down\"}`}\r\n          onClick={this.toggle}\r\n        >\r\n          <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\r\n        </a>\r\n        <ul className={this.state.active ? \"active\" : \"\"}>\r\n          {this.props.countries.map((item) => (\r\n            <li\r\n              key={item}\r\n              onClick={this.selectItem}\r\n              className={this.props.selectedCountry === item ? \"selected\" : \"\"}\r\n            >\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./ActionTypes\";\r\n\r\n// Action creator to dispatch a get error action\r\nexport const getErrors = (error) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n// Action creator to dispatch a clear errors action\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","export const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const GET_COUNTRY_DATA = \"GET_COUNTRY_DATA\";\r\nexport const GET_HISTORICAL_DATA = \"GET_HISTORICAL_DATA\";\r\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const GET_TOP_AFFECTED_COUNTRIES = \"GET_TOP_AFFECTED_COUNTRIES\";\r\nexport const SET_SELECTED_COUNTRY = \"SET_SELECTED_COUNTRY\";\r\n\r\n// Error related actions\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import {\r\n  SET_IS_LOADING,\r\n  GET_COUNTRIES,\r\n  GET_COUNTRY_DATA,\r\n  GET_HISTORICAL_DATA,\r\n  GET_TOP_AFFECTED_COUNTRIES,\r\n  SET_SELECTED_COUNTRY,\r\n} from \"./ActionTypes\";\r\nimport axios from \"axios\";\r\nimport { getErrors } from \"./ErrorActions\";\r\n\r\n// Set loading state\r\nexport const setLoading = (isLoading) => {\r\n  return { type: SET_IS_LOADING, payload: isLoading };\r\n};\r\n\r\n// To set current country\r\nexport const setSelectedCountry = (country) => {\r\n  return {\r\n    type: SET_SELECTED_COUNTRY,\r\n    payload: country,\r\n  };\r\n};\r\n\r\n//  Get all the countries\r\nexport const getCountries = () => (dispatch) => {\r\n  // First set loading to true\r\n  dispatch(setLoading(true));\r\n\r\n  axios\r\n    .get(\"https://disease.sh/v3/covid-19/countries\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_COUNTRIES,\r\n        payload: res.data.map((item) => item.country),\r\n      });\r\n\r\n      // disable loading\r\n      dispatch(setLoading(false));\r\n    })\r\n    .catch((err) => catchErrors(err, dispatch));\r\n};\r\n\r\n// To get some info about country\r\nexport const getCountryData = (country = \"India\") => (dispatch) => {\r\n  // set loading to true\r\n  dispatch(setLoading(true));\r\n\r\n  axios\r\n    .get(\"https://disease.sh/v3/covid-19/countries\")\r\n    .then((res) => {\r\n      const filteredCountry = res.data.filter(\r\n        (data) => data.country.toLowerCase() === country.toLowerCase()\r\n      )[0];\r\n\r\n      const simpleData = {\r\n        name: filteredCountry.country,\r\n        todayCases: filteredCountry.todayCases,\r\n        todayDeaths: filteredCountry.todayDeaths,\r\n        todayRecovered: filteredCountry.todayRecovered,\r\n        active: filteredCountry.active,\r\n        critical: filteredCountry.critical,\r\n        cases: filteredCountry.cases,\r\n        deaths: filteredCountry.deaths,\r\n        recovered: filteredCountry.recovered,\r\n        flag: filteredCountry.countryInfo.flag,\r\n      };\r\n      dispatch({ type: GET_COUNTRY_DATA, payload: simpleData });\r\n      dispatch(setLoading(false));\r\n    })\r\n    .catch((err) => catchErrors(err, dispatch));\r\n};\r\n\r\n// To get country's historical data\r\nexport const getHistoricalData = (country = \"India\") => (dispatch) => {\r\n  // set loading to true\r\n  dispatch(setLoading(true));\r\n\r\n  axios\r\n    .get(\r\n      `https://disease.sh/v3/covid-19/historical/${encodeURI(\r\n        country\r\n      )}?lastdays=365`\r\n    )\r\n    .then(({ data }) => {\r\n      const caseData = getMonthlyData(data.timeline.cases);\r\n      const deathsData = getMonthlyData(data.timeline.deaths);\r\n      const recoveredData = getMonthlyData(data.timeline.recovered);\r\n\r\n      dispatch({\r\n        type: GET_HISTORICAL_DATA,\r\n        payload: { caseData, deathsData, recoveredData },\r\n      });\r\n      dispatch(setLoading(false));\r\n    })\r\n    .catch((err) => catchErrors(err, dispatch));\r\n};\r\n\r\n// Calculate each month's data for each case type\r\nconst getMonthlyData = (data) => {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  let monthlyData = [];\r\n\r\n  for (let i = 0; i < monthNames.length; i++) {\r\n    let monthDays = Object.keys(data).filter(\r\n      (date) => date.split(\"/\")[0] == i + 1\r\n    );\r\n    let lastDateOfMonth = monthDays[monthDays.length - 1];\r\n\r\n    let monthData = {\r\n      month: monthNames[i],\r\n      caseTypeData: data[lastDateOfMonth],\r\n    };\r\n\r\n    monthlyData.push(monthData);\r\n  }\r\n\r\n  return monthlyData;\r\n};\r\n\r\n// Get all the top affected countries\r\nexport const getTopAffectedCountries = (countries) => (dispatch) => {\r\n  // set loading to true\r\n  dispatch(setLoading(true));\r\n\r\n  axios.get(\"https://disease.sh/v3/covid-19/countries\").then((res) => {\r\n    const sortedData = sortData(res.data).slice(0, 50);\r\n    dispatch({ type: GET_TOP_AFFECTED_COUNTRIES, payload: sortedData });\r\n    dispatch(setLoading(false));\r\n  });\r\n};\r\n\r\n// sort the affected countries data\r\nconst sortData = (countries) => countries.sort((a, b) => b.cases - a.cases);\r\n\r\n// To catch fetching data errors\r\nconst catchErrors = (err, dispatch) => {\r\n  if (err.response) {\r\n    dispatch(\r\n      getErrors({\r\n        id: \"SOMETHING_WENT_WRONG\",\r\n        err: \"Oops..Something went Wrong\",\r\n      })\r\n    );\r\n  } else if (err.request && !err.response) {\r\n    dispatch(\r\n      getErrors({\r\n        id: \"NETWORK_ERROR\",\r\n        err: \"Network Error...Please try again!\",\r\n      })\r\n    );\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Loader from \"./Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCountryData,\r\n  getHistoricalData,\r\n  setSelectedCountry,\r\n} from \"../../Redux/actions/ActionCreators\";\r\n\r\nfunction Header({\r\n  isLoading,\r\n  getCountryData,\r\n  countries,\r\n  getHistoricalData,\r\n  selectedCountry,\r\n  setSelectedCountry,\r\n}) {\r\n  // search selected country Data\r\n  const searchCountryData = (country) => {\r\n    // Get country data\r\n    getCountryData(country);\r\n\r\n    // Get country's historical data\r\n    getHistoricalData(country);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <h2>Corona Tracker</h2>\r\n      <div className=\"actions\">\r\n        {isLoading && <Loader />}\r\n        <Dropdown\r\n          countries={countries}\r\n          selectedCountry={selectedCountry}\r\n          setSelectedCountry={setSelectedCountry}\r\n        />\r\n        <button\r\n          className=\"primary-btn\"\r\n          onClick={() => searchCountryData(selectedCountry)}\r\n        >\r\n          Go!\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n    countries: state.countries,\r\n    selectedCountry: state.selectedCountry,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCountryData,\r\n  getHistoricalData,\r\n  setSelectedCountry,\r\n})(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction CountryData({\r\n  name,\r\n  todayCases,\r\n  todayDeaths,\r\n  todayRecovered,\r\n  active,\r\n  critical,\r\n  flag,\r\n}) {\r\n  return (\r\n    <div className=\"country_data\">\r\n      <div className=\"country_info\">\r\n        <h1>{name}'s Info</h1>\r\n        <ul>\r\n          <li>\r\n            <strong>Country Name</strong> - {name}\r\n          </li>\r\n          <li>\r\n            <strong>Today's Cases</strong> - {todayCases}\r\n          </li>\r\n          <li>\r\n            <strong>Today's Death</strong> - {todayDeaths}\r\n          </li>\r\n          <li>\r\n            <strong>Today's Recovered</strong> - {todayRecovered}\r\n          </li>\r\n          <li>\r\n            <strong>Active</strong> - {active}\r\n          </li>\r\n          <li>\r\n            <strong>Critical</strong> - {critical}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"country_icon\">\r\n        <img src={flag} alt=\"Country Flag\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.countryData.name,\r\n    todayCases: state.countryData.todayCases,\r\n    todayDeaths: state.countryData.todayDeaths,\r\n    todayRecovered: state.countryData.todayRecovered,\r\n    active: state.countryData.active,\r\n    critical: state.countryData.critical,\r\n    flag: state.countryData.flag,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountryData);\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Graph({ cases, deaths, recovered, countryName }) {\r\n  // Chart configuration\r\n\r\n  const data = {\r\n    labels: cases.map((data) => data.month),\r\n    datasets: [\r\n      {\r\n        label: \"Cases\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#ff1f2d\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#ff1f2d\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 2,\r\n        pointHoverRadius: 6,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 5,\r\n        pointHitRadius: 10,\r\n        data: cases.map((data) => data.caseTypeData),\r\n      },\r\n      {\r\n        label: \"Deaths\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#ff1f2d\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#ff1f2d\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 2,\r\n        pointHoverRadius: 6,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 5,\r\n        pointHitRadius: 10,\r\n        data: deaths.map((data) => data.caseTypeData),\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"#ff1f2d\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#ff1f2d\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 2,\r\n        pointHoverRadius: 6,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 5,\r\n        pointHitRadius: 10,\r\n        data: recovered.map((data) => data.caseTypeData),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph_container\">\r\n      <Line\r\n        data={data}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${countryName}'s  data`,\r\n            fontSize: 25,\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cases: state.historicalData.caseData,\r\n    deaths: state.historicalData.deathsData,\r\n    recovered: state.historicalData.recoveredData,\r\n    countryName: state.countryData.name,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearErrors } from \"../Redux/actions/ErrorActions\";\r\nimport {\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n} from \"../Redux/actions/ActionCreators\";\r\n\r\nfunction Modal({\r\n  error,\r\n  clearErrors,\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n}) {\r\n  // To close modal\r\n  const closeModal = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Close modal\r\n    clearErrors();\r\n  };\r\n\r\n  // Retry fetching data\r\n  const retryFetching = () => {\r\n    // close the Modal\r\n    clearErrors();\r\n\r\n    // Get all countries\r\n    getCountries();\r\n\r\n    // Get historical data\r\n    getHistoricalData();\r\n\r\n    // Get country data\r\n    getCountryData();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    error.isError ? (\r\n      <div className=\"modal-bg\">\r\n        <div className=\"modal-content\">\r\n          <a href=\"\" className=\"close-modal\" onClick={closeModal}>\r\n            &times;\r\n          </a>\r\n          <h1>Oops....</h1>\r\n          <p>{error.err}</p>\r\n          <button className=\"primary-btn\" onClick={retryFetching}>\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : null,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  clearErrors,\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n})(Modal);\r\n","import React from \"react\";\r\nimport DataPanels from \"./DataPanels\";\r\nimport Header from \"./Header\";\r\nimport CountryData from \"./CountryData\";\r\nimport Graph from \"./Graph\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-wrapper\">\r\n      <Modal />\r\n      <Header />\r\n      <DataPanels />\r\n      <CountryData />\r\n      <Graph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nfunction LeftSidebar({ history }) {\r\n  const [selectedLink, setSelectedLink] = useState(\r\n    history.location.pathname.substring(1)\r\n  );\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        <Link\r\n          to={process.env.PUBLIC_URL + \"/\"}\r\n          onClick={() => setSelectedLink(\"\")}\r\n        >\r\n          <li\r\n            className={`${\r\n              selectedLink === \"\" ||\r\n              selectedLink === \"react-corona-tracker/\" ||\r\n              selectedLink === \"react-corona-tracker\"\r\n                ? \"active\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"fa fa-home\"></i>\r\n          </li>\r\n        </Link>\r\n        <Link\r\n          to={process.env.PUBLIC_URL + \"/map\"}\r\n          onClick={() => setSelectedLink(\"map\")}\r\n        >\r\n          <li className={`${selectedLink === \"map\" ? \"active\" : \"\"}`}>\r\n            <i className=\"fa fa-map-marker\"></i>\r\n          </li>\r\n        </Link>\r\n        <Link\r\n          to={process.env.PUBLIC_URL + \"/countries\"}\r\n          onClick={() => setSelectedLink(\"globe\")}\r\n        >\r\n          <li className={`${selectedLink === \"globe\" ? \"active\" : \"\"}`}>\r\n            <i className=\"fa fa-globe\"></i>\r\n          </li>\r\n        </Link>\r\n        <Link\r\n          to={process.env.PUBLIC_URL + \"/info\"}\r\n          onClick={() => setSelectedLink(\"info\")}\r\n        >\r\n          <li className={`${selectedLink === \"info\" ? \"active\" : \"\"}`}>\r\n            <i className=\"fa fa-info\"></i>\r\n          </li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LeftSidebar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n\r\nexport default function Map() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 20,\r\n    longitude: 77,\r\n    width: \"88vw\",\r\n    height: \"100vh\",\r\n    zoom: 1,\r\n  });\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // fetching data\r\n    const fetchData = () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((res) => res.json())\r\n        .then((res) => setCountries(res));\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const listener = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedCountry(null);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"map_container\">\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapStyle=\"mapbox://styles/shaanalam/ckili38cz0c1f18se6ym09vrf\"\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={(viewport) => setViewport(viewport)}\r\n      >\r\n        {countries.map((data) => (\r\n          <Marker\r\n            key={data.country}\r\n            latitude={data.countryInfo.lat}\r\n            longitude={data.countryInfo.long}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setSelectedCountry(data);\r\n              }}\r\n            >\r\n              <div className=\"circle\"></div>\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n        {selectedCountry && (\r\n          <Popup\r\n            className=\"popup_wrapper\"\r\n            latitude={selectedCountry.countryInfo.lat}\r\n            longitude={selectedCountry.countryInfo.long}\r\n            onClose={() => setSelectedCountry(null)}\r\n          >\r\n            <div className=\"popup\">\r\n              <h4>{selectedCountry.country}</h4>\r\n              <img src={selectedCountry.countryInfo.flag} alt=\"\" />\r\n              <ul>\r\n                <li>Cases - {selectedCountry.cases}</li>\r\n                <li>Deaths - {selectedCountry.deaths}</li>\r\n                <li>Recovered - {selectedCountry.recovered}</li>\r\n              </ul>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<p>\r\n\t\t\t\tMade with{\" \"}\r\n\t\t\t\t<span role=\"img\" aria-label=\"emoji\">\r\n\t\t\t\t\t❤️\r\n\t\t\t\t</span>{\" \"}\r\n\t\t\t\tby{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://www.instagram.com/__iamshaan/\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tShaan Alam\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t</footer>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TopAffectedCountry({ topAffectedCountries }) {\r\n  return (\r\n    <div className=\"top_affected_countries\">\r\n      <h1>Most Affected countries</h1>\r\n      <div className=\"countries\">\r\n        {topAffectedCountries.map((data, index) => (\r\n          <div className=\"country\" key={data.country}>\r\n            <div className=\"country_img\">\r\n              <img src={data.countryInfo.flag} alt=\"\" />\r\n            </div>\r\n            <div className=\"country_info\">\r\n              <h6>#{index + 1}</h6>\r\n              <h3>{data.country}</h3>\r\n              <h6>Cases: {data.cases}</h6>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    topAffectedCountries: state.topAffectedCountries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopAffectedCountry);\r\n","import React from \"react\";\r\n\r\nexport default function Info() {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"info_header\">\r\n        <h1>Corona Virus </h1>\r\n        <h2>\r\n          Protect yourself and others around you by knowing the facts and taking\r\n          appropriate precautions. Follow advice provided by your local health\r\n          authority.\r\n        </h2>\r\n      </div>\r\n      <div className=\"info_content\">\r\n        <h4>To prevent the spread of COVID-19:</h4>\r\n        <ul>\r\n          <li>\r\n            Clean your hands often. Use soap and water, or an alcohol-based hand\r\n            rub.\r\n          </li>\r\n          <li>\r\n            Maintain a safe distance from anyone who is coughing or sneezing.\r\n          </li>\r\n          <li>Wear a mask when physical distancing is not possible.</li>\r\n          <li>Don’t touch your eyes, nose or mouth.</li>\r\n          <li>\r\n            Cover your nose and mouth with your bent elbow or a tissue when you\r\n            cough or sneeze.\r\n          </li>\r\n          <li>Stay home if you feel unwell.</li>\r\n          <li>\r\n            If you have a fever, cough and difficulty breathing, seek medical\r\n            attention.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport LeftSidebar from \"./components/LeftSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n} from \"./Redux/actions/ActionCreators\";\r\nimport Map from \"./components/Map\";\r\nimport Footer from \"./components/Footer\";\r\nimport { getTopAffectedCountries } from \"./Redux/actions/ActionCreators\";\r\nimport TopAffectedCountry from \"./components/TopAffectedCountry\";\r\nimport Info from \"./components/Info\";\r\n\r\nfunction App({\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n  getTopAffectedCountries,\r\n}) {\r\n  useEffect(() => {\r\n    getCountries();\r\n    getCountryData();\r\n    getHistoricalData();\r\n    getTopAffectedCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <div className=\"App__left\">\r\n          <LeftSidebar />\r\n        </div>\r\n        <div className=\"App__right\">\r\n          <Switch>\r\n            <Route path={process.env.PUBLIC_URL + \"/\"} component={Home} exact />\r\n            <Route path={process.env.PUBLIC_URL + \"/map\"} component={Map} />\r\n            <Route\r\n              path={process.env.PUBLIC_URL + \"/countries\"}\r\n              component={TopAffectedCountry}\r\n            />\r\n            <Route path={process.env.PUBLIC_URL + \"/info\"} component={Info} />\r\n          </Switch>\r\n          <Footer />          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCountries,\r\n  getCountryData,\r\n  getHistoricalData,\r\n  getTopAffectedCountries,\r\n})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_IS_LOADING } from \"../actions/ActionTypes\";\r\n\r\nfunction isLoading(state = false, action) {\r\n  switch (action.type) {\r\n    case SET_IS_LOADING:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default isLoading;\r\n","import { GET_COUNTRIES } from \"../actions/ActionTypes\";\r\n\r\nfunction countries(state = [], action) {\r\n  switch (action.type) {\r\n    case GET_COUNTRIES:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default countries;\r\n","import { GET_COUNTRY_DATA } from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  name: null,\r\n  todayCases: null,\r\n  todayDeaths: null,\r\n  todayRecovered: null,\r\n  active: null,\r\n  critical: null,\r\n  cases: null,\r\n  deaths: null,\r\n  recovered: null,\r\n};\r\n\r\nfunction countryData(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_COUNTRY_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default countryData;\r\n","import { GET_HISTORICAL_DATA } from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  caseData: [],\r\n  deathsData: [],\r\n  recoveredData: [],\r\n};\r\n\r\nfunction historicalData(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_HISTORICAL_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default historicalData;\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  isError: false,\r\n  id: \"\",\r\n  err: \"\",\r\n};\r\n\r\nfunction errors(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        ...action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        id: \"\",\r\n        isError: false,\r\n        err: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default errors;\r\n","import { GET_TOP_AFFECTED_COUNTRIES } from \"../actions/ActionTypes\";\r\n\r\nconst initialState = [];\r\n\r\nfunction topAffectedCountries(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TOP_AFFECTED_COUNTRIES:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default topAffectedCountries;\r\n","import { SET_SELECTED_COUNTRY } from \"../actions/ActionTypes\";\r\n\r\nconst initialState = \"India\";\r\n\r\nfunction selectedCountry(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_SELECTED_COUNTRY:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectedCountry;\r\n","import { combineReducers } from \"redux\";\r\nimport isLoading from \"./isLoading\";\r\nimport countries from \"./countries\";\r\nimport countryData from \"./countryData\";\r\nimport historicalData from \"./historicalData\";\r\nimport error from \"./error\";\r\nimport topAffectedCountries from \"./topAffectedCountries\";\r\nimport selectedCountry from \"./selectedCountry\";\r\n\r\nexport default combineReducers({\r\n  isLoading,\r\n  countries,\r\n  countryData,\r\n  historicalData,\r\n  error,\r\n  topAffectedCountries,\r\n  selectedCountry,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers/\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"./assets/scss/styles.scss\";\r\n\r\n// React router\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}