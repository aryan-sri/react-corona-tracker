{"version":3,"sources":["components/Nav.js","components/Showcase.js","components/Card.js","components/CardsInfo.js","components/Graph.js","components/AffectedCountry.js","components/TopAffectedCountries.js","components/Cards.js","components/Footer.js","App.js","serviceWorker.js","index.js","assets/images/Logo.png","assets/images/Mask.png","assets/images/sanitizer.png","assets/images/sneezing.png","assets/images/homework.png"],"names":["Nav","props","className","navMenu","shown","href","src","Logo","alt","offset","color","onClick","toggleNavMenu","fontSize","Showcase","id","left","Mask","right","delay","type","placeholder","onFormSubmit","Card","title","value","CardsInfo","cards","map","card","key","Math","floor","random","toString","Graph","state","currentCountryData","this","up","data","options","responsive","maintainAspectRatio","display","text","name","length","confirmed","deaths","recovered","labels","obj","month","datasets","label","backgroundColor","React","Component","AffectedCountry","affectedCountry","TopAffectedCountries","generate","count","topAffectedCountries","Cards","Sanitizer","Sneezing","Homework","Footer","role","aria-label","App","getTopAffectedCountries","countries","Object","keys","API","allCountryData","forEach","country","getCountryAnalytics","push","sort","a","b","slice","setState","e","target","previousElementSibling","currentCountry","alert","countryName","monthNames","monthlyData","i","monthData","filter","c","date","split","lastDateData","Date","getMonth","fetch","then","res","json","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.387fbffb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport IosMenu from \"react-ionicons/lib/IosMenu\";\r\nimport Logo from \"../assets/images/Logo.png\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\n\r\nfunction Nav(props) {\r\n  const className = props.navMenu.shown ? \"active-nav-menu\" : \"\";\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"container\">\r\n        <div className=\"brand\">\r\n          <a href=\"#!\">\r\n            <img src={Logo} alt=\"Logo\" className=\"nav-logo\" />\r\n          </a>\r\n        </div>\r\n        <ul className={className}>\r\n          <li>\r\n            <AnchorLink offset={() => 100} href=\"#showcase\">\r\n              Home\r\n            </AnchorLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/pomber/covid19\">API</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/codeshaan\">GitHub</a>\r\n          </li>\r\n        </ul>\r\n        <IosMenu\r\n          className=\"nav-toggle\"\r\n          color=\"#20B560\"\r\n          onClick={props.toggleNavMenu}\r\n          fontSize=\"40px\"\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Mask from \"../assets/images/Mask.png\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\nimport Reveal from \"react-reveal/Reveal\";\r\n\r\nfunction Showcase(props) {\r\n  return (\r\n    <section id=\"showcase\" className=\"showcase\">\r\n      <Reveal left>\r\n        <div className=\"showcase-img\">\r\n          <img src={Mask} alt=\"Showcaseimage\" />\r\n        </div>\r\n      </Reveal>\r\n      <Reveal right delay={500}>\r\n        <div className=\"showcase-text\">\r\n          <h1>\r\n            Track any county's status with our <br />\r\n            CORONA-TRACKER.\r\n          </h1>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Country Name....\"\r\n            />\r\n            <AnchorLink\r\n              offset={() => 100}\r\n              href=\"#graph-section\"\r\n              onClick={props.onFormSubmit}\r\n              className=\"primary-btn\"\r\n            >\r\n              Search\r\n            </AnchorLink>\r\n          </div>\r\n        </div>\r\n      </Reveal>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Flip from \"react-reveal/Flip\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Flip left>\r\n      <div className=\"card\">\r\n        <h1 className=\"card-title\">{props.title}</h1>\r\n        <h3>{props.value}</h3>\r\n      </div>\r\n    </Flip>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nfunction CardsInfo (props) {\r\n  return (\r\n    <div className=\"cards-info-grid\">\r\n      {props.cards.map(card => (\r\n        <Card key={generateID()} title={card.title} value={card.value} />       \r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction generateID () {\r\n  return \"#\" + Math.floor(Math.random()  * 16777215).toString(16);\r\n}\r\n\r\nexport default CardsInfo;\r\n","import React from \"react\";\r\nimport CardsInfo from \"./CardsInfo\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: [\r\n        { title: \"Confirmed\", value: 1000 },\r\n        { title: \"Deaths\", value: 1000 },\r\n        { title: \"Recovered\", value: 1000 },\r\n      ],\r\n      currentCountryData: {},\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    let cards = [];\r\n    const data = props.data[props.data.length - 1];\r\n\r\n    if (data) {\r\n      cards = [\r\n        { title: \"Confirmed\", value: data.confirmed },\r\n        { title: \"Deaths\", value: data.deaths },\r\n        { title: \"Recovered\", value: data.recovered },\r\n      ];\r\n    }\r\n\r\n    return {\r\n      data: {\r\n        labels: props.data.map(obj => obj.month),\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed\",\r\n            data: props.data.map(obj => obj.confirmed),\r\n            backgroundColor: \"rgba(252, 133, 163, 0.5)\",\r\n          },\r\n          {\r\n            label: \"Deaths\",\r\n            data: props.data.map(obj => obj.deaths),\r\n            backgroundColor: \"rgba(226, 36, 49, 0.7)\",\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            data: props.data.map(obj => obj.recovered),\r\n            backgroundColor: \"rgba(255, 76, 133, 0.7)\",\r\n          },\r\n        ],\r\n      },\r\n      cards: cards,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"graph-section\" className=\"graph-section\">\r\n        <div className=\"container\">\r\n          <CardsInfo cards={this.state.cards} />\r\n        </div>\r\n        <Fade up delay={400}>\r\n          <div className=\"chart-container\">\r\n            <Line\r\n              data={this.state.data}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                title: {\r\n                  display: true,\r\n                  text: `${this.props.name}`,\r\n                  fontSize: 25,\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport Flip from \"react-reveal/Flip\";\r\n\r\nfunction AffectedCountry(props) {\r\n  return (\r\n    <Flip left delay={400}>\r\n      <div className=\"country-data\">\r\n        <span className=\"country-count\">#{props.id}</span>\r\n        <h3>{props.affectedCountry.name}</h3>\r\n        <h5>Confirmed: {props.affectedCountry.confirmed}</h5>\r\n      </div>\r\n    </Flip>\r\n  );\r\n}\r\n\r\nexport default AffectedCountry;\r\n","import React from \"react\";\r\nimport AffectedCountry from \"./AffectedCountry\";\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass TopAffectedCountries extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static getStateFromProps(props) {\r\n    return { topAffectedCountries: props.topAffectedCountries };\r\n  }\r\n\r\n  generate = () => Math.floor(Math.random() * 1677215).toString(16);\r\n\r\n  render() {\r\n    let count = 1;\r\n    return (\r\n      <section className=\"affected-countries-section\">\r\n        <div className=\"container\">\r\n          <Fade>\r\n            <h1>World's most affected countries</h1>\r\n          </Fade>\r\n          <div className=\"grid\">\r\n            {this.props.topAffectedCountries.map(affectedCountry => (\r\n              <AffectedCountry\r\n                id={count++}\r\n                key={this.generate()}\r\n                affectedCountry={affectedCountry}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopAffectedCountries;\r\n","import React from \"react\";\r\nimport Sanitizer from \"../assets/images/sanitizer.png\";\r\nimport Sneezing from \"../assets/images/sneezing.png\";\r\nimport Homework from \"../assets/images/homework.png\";\r\nimport { Fade, Flip } from \"react-reveal\";\r\n\r\nfunction Cards() {\r\n  return (\r\n    <section className=\"card-grid-section\">\r\n      <div className=\"container\">\r\n        <Fade>\r\n          <h1>#GOCORONA</h1>\r\n        </Fade>\r\n        <div className=\"card-grid\">\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Sanitizer} alt=\"card-img\" />\r\n              <h3>Wash hands often!</h3>\r\n              <p>Wash your hands properly with a good sanitizer!</p>\r\n            </div>\r\n          </Flip>\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Sneezing} alt=\"card-img\" />\r\n              <h3>Cover your mouth while sneezing!</h3>\r\n              <p>\r\n                It's always good to cover your mouth while sneezing. You'll\r\n                always thank yourself for that!\r\n              </p>\r\n            </div>\r\n          </Flip>\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Homework} alt=\"card-img\" />\r\n              <h3>Stay at home, Work at home!</h3>\r\n              <p>\r\n                This pandemic time, be at home, work at home, & learn at home!\r\n              </p>\r\n            </div>\r\n          </Flip>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport LogoFacebook from \"react-ionicons/lib/LogoFacebook\";\r\nimport LogoInstagram from \"react-ionicons/lib/LogoInstagram\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <p>\r\n          Made by Shaan Alam with{\" \"}\r\n          <span role=\"img\" aria-label=\"emoji\">\r\n            💓\r\n          </span>\r\n        </p>\r\n        <div className=\"social-icons\">\r\n          <h4>Connect with me on </h4>\r\n          <a href=\"https://www.facebook.com/shaan.alam.1004/\">\r\n            <LogoFacebook color=\"#ddd\" fontSize=\"40px\" />\r\n          </a>\r\n          <a href=\"https://www.instagram.com/shaancodes/\">\r\n            <LogoInstagram color=\"#ddd\" fontSize=\"40px\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport API from \"./assets/js/API.json\";\nimport Nav from \"./components/Nav\";\nimport Showcase from \"./components/Showcase\";\nimport Graph from \"./components/Graph\";\nimport TopAffectedCountries from \"./components/TopAffectedCountries\";\nimport Cards from \"./components/Cards\";\nimport Footer from \"./components/Footer\";\nimport \"./assets/css/styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navMenu: {\n        shown: false,\n      },\n      currentCountry: {\n        name: \"\",\n        data: [],\n      },\n      topAffectedCountries: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then(res => res.json())\n      .then(res => {\n        this.setState({ API: res });\n        const country = this.getCountryAnalytics(\"India\");\n        this.setState({ currentCountry: { name: \"India\", data: country } });\n        this.getTopAffectedCountries();\n      });\n  }\n\n  getTopAffectedCountries = () => {\n    const countries = Object.keys(API);\n\n    let allCountryData = [],\n      data,\n      confirmed;\n\n    countries.forEach(country => {\n      data = this.getCountryAnalytics(country);\n      confirmed = data[data.length - 1].confirmed;\n      allCountryData.push({ name: country, confirmed: confirmed });\n    });\n\n    const topAffectedCountries = allCountryData\n      .sort((a, b) => b.confirmed - a.confirmed)\n      .slice(0, 10);\n\n    this.setState({ topAffectedCountries });\n  };\n\n  toggleNavMenu = () => {\n    this.setState({ navMenu: { shown: !this.state.navMenu.shown } });\n  };\n\n  onFormSubmit = e => {\n    if (e.target.previousElementSibling.value !== \"\") {\n      const { currentCountry } = this.state;\n\n      currentCountry.name = e.target.previousElementSibling.value;\n      currentCountry.data = this.getCountryAnalytics(currentCountry.name);\n\n      this.setState({ currentCountry });\n    } else {\n      alert(\"empty box\");\n    }\n  };\n\n  getCountryAnalytics = countryName => {\n    const monthNames = [\n      \"\",\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    const { [countryName]: country } = this.state.API || API;\n\n    let monthlyData = [];\n\n    for (let i = 1; i <= new Date().getMonth() + 1; i++) {\n      let monthData = country.filter(c => +c.date.split(\"-\")[1] === i);\n\n      let lastDateData = monthData[monthData.length - 1];\n      lastDateData[\"month\"] = monthNames[i];\n\n      monthlyData.push(lastDateData);\n    }\n\n    return monthlyData;\n  };\n\n  render() {\n    return (\n      <main>\n        <Nav navMenu={this.state.navMenu} toggleNavMenu={this.toggleNavMenu} />\n        <Showcase onFormSubmit={this.onFormSubmit} />\n        <Graph\n          data={this.state.currentCountry.data}\n          name={this.state.currentCountry.name}\n        />\n        <TopAffectedCountries\n          topAffectedCountries={this.state.topAffectedCountries}\n        />\n        <Cards />\n        <Footer />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.172fbdff.png\";","module.exports = __webpack_public_path__ + \"static/media/Mask.a801879c.png\";","module.exports = __webpack_public_path__ + \"static/media/sanitizer.d291ff8f.png\";","module.exports = __webpack_public_path__ + \"static/media/sneezing.c6e42e36.png\";","module.exports = __webpack_public_path__ + \"static/media/homework.392a1213.png\";"],"sourceRoot":""}