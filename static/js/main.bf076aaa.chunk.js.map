{"version":3,"sources":["components/Nav.js","DataContext.js","components/Showcase.js","components/Card.js","components/CardsInfo.js","components/Graph.js","components/AffectedCountry.js","components/TopAffectedCountries.js","components/Cards.js","components/Footer.js","App.js","serviceWorker.js","index.js","assets/images/Mask.png","assets/images/sanitizer.png","assets/images/sneezing.png","assets/images/homework.png"],"names":["Nav","props","toggleNavMenu","setState","isNavOpen","state","className","this","href","onClick","color","fontSize","offset","React","Component","Context","createContext","ContextProvider","getTopAffectedCountries","data","confirmed","countries","Object","keys","API","allCountryData","forEach","country","getCountryAnalytics","length","push","name","topAffectedCountries","sort","a","b","slice","onFormSubmit","e","target","previousElementSibling","value","currentCountry","alert","countryName","monthNames","monthlyData","i","monthData","filter","c","date","split","lastDateData","Date","getMonth","fetch","then","res","json","console","log","Provider","children","Showcase","id","left","src","Mask","alt","right","delay","type","placeholder","Consumer","Card","title","CardsInfo","cards","map","card","key","Math","floor","random","toString","Graph","currentCountryData","up","options","responsive","maintainAspectRatio","display","text","deaths","recovered","labels","obj","month","datasets","label","backgroundColor","AffectedCountry","affectedCountry","TopAffectedCountries","generate","context","count","contextType","Cards","Sanitizer","Sneezing","Homework","Footer","role","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.bf076aaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport IosMenu from \"react-ionicons/lib/IosMenu\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\nimport IosClose from 'react-ionicons/lib/IosClose';\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isNavOpen: false };\r\n  }\r\n\r\n  toggleNavMenu = () =>\r\n    this.setState({ isNavOpen: !this.state.isNavOpen });\r\n\r\n  render() {\r\n    const className = this.state.isNavOpen ? \"active-nav-menu\" : \"\";\r\n    return (\r\n      <nav>\r\n        <div className=\"container\">\r\n          <div className=\"brand\">\r\n            <a href=\"#!\">\r\n              Covid-19 tracker\r\n            </a>\r\n          </div>\r\n          <ul className={className}>\r\n            <li className=\"close\"><IosClose onClick={this.toggleNavMenu} color=\"rgb(115, 46, 193)\" fontSize=\"40px\" /></li>\r\n            <li>\r\n              <AnchorLink offset={() => 100} href=\"#showcase\">\r\n                Home\r\n              </AnchorLink>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/pomber/covid19\">API</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/codeshaan\">GitHub</a>\r\n            </li>\r\n          </ul>\r\n          <IosMenu\r\n            className=\"nav-toggle\"\r\n            color=\"rgb(115, 46, 193)\"\r\n            onClick={this.toggleNavMenu}\r\n            fontSize=\"40px\"\r\n          />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport API from \"./assets/js/API.json\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport class ContextProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      API: [],\r\n      currentCountry: {\r\n        name: \"\",\r\n        data: [],\r\n      },\r\n      topAffectedCountries: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        this.setState({ API: res });\r\n        const country = this.getCountryAnalytics(\"India\");\r\n        this.setState({ currentCountry: { name: \"India\", data: country } });\r\n        this.getTopAffectedCountries();\r\n      });\r\n  }\r\n\r\n  getTopAffectedCountries = () => {\r\n    const countries = Object.keys(API);\r\n\r\n    let allCountryData = [],\r\n      data,\r\n      confirmed;\r\n\r\n    countries.forEach((country) => {\r\n      data = this.getCountryAnalytics(country);\r\n      confirmed = data[data.length - 1].confirmed;\r\n      allCountryData.push({ name: country, confirmed: confirmed });\r\n    });\r\n\r\n    const topAffectedCountries = allCountryData\r\n      .sort((a, b) => b.confirmed - a.confirmed)\r\n      .slice(0, 10);\r\n\r\n    this.setState({ topAffectedCountries });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    if (e.target.previousElementSibling.value !== \"\") {\r\n      const { currentCountry } = this.state;\r\n\r\n      currentCountry.name = e.target.previousElementSibling.value;\r\n      currentCountry.data = this.getCountryAnalytics(currentCountry.name);\r\n\r\n      this.setState({ currentCountry });\r\n    } else {\r\n      alert(\"empty box\");\r\n    }\r\n  };\r\n\r\n  getCountryAnalytics = (countryName) => {\r\n    const monthNames = [\r\n      \"\",\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const { [countryName]: country } = this.state.API;\r\n\r\n    let monthlyData = [];\r\n\r\n    for (let i = 1; i <= new Date().getMonth() + 1; i++) {\r\n      let monthData = country.filter((c) => +c.date.split(\"-\")[1] === i);\r\n\r\n      let lastDateData = monthData[monthData.length - 1];\r\n      lastDateData[\"month\"] = monthNames[i];\r\n\r\n      monthlyData.push(lastDateData);\r\n    }\r\n\r\n    return monthlyData;\r\n  };\r\n\r\n  render() {\r\n    let value = {\r\n      state: this.state,\r\n      getCountryAnalytics: this.getCountryAnalytics,\r\n      onFormSubmit: this.onFormSubmit,\r\n      getTopAffectedCountries: this.getTopAffectedCountries,\r\n    };\r\n\r\n    console.log(value);\r\n    return (\r\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Mask from \"../assets/images/Mask.png\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\nimport Reveal from \"react-reveal/Reveal\";\r\n\r\nimport { Context } from \"../DataContext\";\r\n\r\nfunction Showcase() {\r\n  return (\r\n    <section id=\"showcase\" className=\"showcase\">\r\n      <Reveal left>\r\n        <div className=\"showcase-img\">\r\n          <img src={Mask} alt=\"Showcaseimage\" />\r\n        </div>\r\n      </Reveal>\r\n      <Reveal right delay={500}>\r\n        <div className=\"showcase-text\">\r\n          <h1>\r\n            Track any county's status with our <br />\r\n            <span className=\"showcase-title\">CORONA-TRACKER.</span>\r\n          </h1>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Country Name....\"\r\n            />\r\n            <Context.Consumer>\r\n              {value => (\r\n                <AnchorLink\r\n                  offset={() => 100}\r\n                  href=\"#graph-section\"\r\n                  onClick={value.onFormSubmit}\r\n                  className=\"primary-btn\"\r\n                >\r\n                  Search\r\n                </AnchorLink>\r\n              )}\r\n            </Context.Consumer>\r\n          </div>\r\n        </div>\r\n      </Reveal>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Flip from \"react-reveal/Flip\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Flip left>\r\n      <div className=\"card\">\r\n        <h1 className=\"card-title\">{props.title}</h1>\r\n        <h3>{props.value}</h3>\r\n      </div>\r\n    </Flip>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nfunction CardsInfo (props) {\r\n  return (\r\n    <div className=\"cards-info-grid\">\r\n      {props.cards.map(card => (\r\n        <Card key={generateID()} title={card.title} value={card.value} />       \r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction generateID () {\r\n  return \"#\" + Math.floor(Math.random()  * 16777215).toString(16);\r\n}\r\n\r\nexport default CardsInfo;\r\n","import React from \"react\";\r\nimport CardsInfo from \"./CardsInfo\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: [\r\n        { title: \"Confirmed\", value: 1000 },\r\n        { title: \"Deaths\", value: 1000 },\r\n        { title: \"Recovered\", value: 1000 },\r\n      ],\r\n      currentCountryData: {},\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    let cards = [];\r\n    const data = props.data[props.data.length - 1];\r\n\r\n    if (data) {\r\n      cards = [\r\n        { title: \"Confirmed\", value: data.confirmed },\r\n        { title: \"Deaths\", value: data.deaths },\r\n        { title: \"Recovered\", value: data.recovered },\r\n      ];\r\n    }\r\n\r\n    return {\r\n      data: {\r\n        labels: props.data.map(obj => obj.month),\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed\",\r\n            data: props.data.map(obj => obj.confirmed),\r\n            backgroundColor: \"rgba(252, 133, 163, 0.5)\",\r\n          },\r\n          {\r\n            label: \"Deaths\",\r\n            data: props.data.map(obj => obj.deaths),\r\n            backgroundColor: \"rgba(226, 36, 49, 0.7)\",\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            data: props.data.map(obj => obj.recovered),\r\n            backgroundColor: \"rgba(255, 76, 133, 0.7)\",\r\n          },\r\n        ],\r\n      },\r\n      cards: cards,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"graph-section\" className=\"graph-section\">\r\n        <div className=\"container\">\r\n          <CardsInfo cards={this.state.cards} />\r\n        </div>\r\n        <Fade up delay={400}>\r\n          <div className=\"chart-container\">\r\n            <Line\r\n              data={this.state.data}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                title: {\r\n                  display: true,\r\n                  text: `${this.props.name}`,\r\n                  fontSize: 25,\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </Fade>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport Flip from \"react-reveal/Flip\";\r\n\r\nfunction AffectedCountry(props) {\r\n  return (\r\n    <Flip left delay={400 + props.id * 100}>\r\n      <div className=\"country-data\">\r\n        <span className=\"country-count\">#{props.id}</span>\r\n        <h3>{props.affectedCountry.name}</h3>\r\n        <h5>Confirmed: {props.affectedCountry.confirmed}</h5>\r\n      </div>\r\n    </Flip>\r\n  );\r\n}\r\n\r\nexport default AffectedCountry;\r\n","import React from \"react\";\r\nimport AffectedCountry from \"./AffectedCountry\";\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nimport { Context } from '../DataContext';\r\n\r\n\r\nclass TopAffectedCountries extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  generate = () => Math.floor(Math.random() * 1677215).toString(16);\r\n\r\n  render() {\r\n    let value = this.context;\r\n    let count = 1;\r\n    return (\r\n      <section className=\"affected-countries-section\">\r\n        <div className=\"container\">\r\n          <Fade>\r\n            <h1>World's most affected countries</h1>\r\n          </Fade>\r\n          <div className=\"grid\">\r\n            {value.state.topAffectedCountries.map(affectedCountry => (\r\n              <AffectedCountry\r\n                id={count++}\r\n                key={this.generate()}\r\n                affectedCountry={affectedCountry}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nTopAffectedCountries.contextType = Context;\r\n\r\nexport default TopAffectedCountries;\r\n","import React from \"react\";\r\nimport Sanitizer from \"../assets/images/sanitizer.png\";\r\nimport Sneezing from \"../assets/images/sneezing.png\";\r\nimport Homework from \"../assets/images/homework.png\";\r\nimport { Fade, Flip } from \"react-reveal\";\r\n\r\nfunction Cards() {\r\n  return (\r\n    <section className=\"card-grid-section\">\r\n      <div className=\"container\">\r\n        <Fade>\r\n          <h1>#GOCORONA</h1>\r\n        </Fade>\r\n        <div className=\"card-grid\">\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Sanitizer} alt=\"card-img\" />\r\n              <h3>Wash hands often!</h3>\r\n              <p>Wash your hands properly with a good sanitizer!</p>\r\n            </div>\r\n          </Flip>\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Sneezing} alt=\"card-img\" />\r\n              <h3>Cover your mouth while sneezing!</h3>\r\n              <p>\r\n                It's always good to cover your mouth while sneezing. You'll\r\n                always thank yourself for that!\r\n              </p>\r\n            </div>\r\n          </Flip>\r\n          <Flip left delay={300}>\r\n            <div className=\"card\">\r\n              <img src={Homework} alt=\"card-img\" />\r\n              <h3>Stay at home, Work at home!</h3>\r\n              <p>\r\n                This pandemic time, be at home, work at home, & learn at home!\r\n              </p>\r\n            </div>\r\n          </Flip>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport LogoFacebook from \"react-ionicons/lib/LogoFacebook\";\r\nimport LogoInstagram from \"react-ionicons/lib/LogoInstagram\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <h1>Made by Shaan Alam with <span role=\"img\" aria-label=\"emoji\">❤</span></h1>\r\n        <h1>You can follow me here...</h1>\r\n        <div className=\"social-icons\">\r\n          <a href=\"#!\">\r\n            <LogoFacebook fontSize=\"40px\" color=\"#fff\"/>            \r\n          </a>\r\n          <a href=\"#!\">\r\n            <LogoInstagram fontSize=\"40px\" color=\"#fff\"/>\r\n          </a>          \r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport Showcase from \"./components/Showcase\";\r\nimport Graph from \"./components/Graph\";\r\nimport TopAffectedCountries from \"./components/TopAffectedCountries\";\r\nimport Cards from \"./components/Cards\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./assets/css/styles.css\";\r\n\r\nimport { Context, ContextProvider } from \"./DataContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <Nav />\r\n      <ContextProvider>\r\n        <Showcase />\r\n        <Context.Consumer>\r\n          {value => (\r\n            <Graph\r\n              data={value.state.currentCountry.data}\r\n              name={value.state.currentCountry.name}\r\n            />\r\n          )}\r\n        </Context.Consumer>\r\n        <TopAffectedCountries />\r\n      </ContextProvider>\r\n      <Cards />\r\n      <Footer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n  \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Mask.a801879c.png\";","module.exports = __webpack_public_path__ + \"static/media/sanitizer.d291ff8f.png\";","module.exports = __webpack_public_path__ + \"static/media/sneezing.c6e42e36.png\";","module.exports = __webpack_public_path__ + \"static/media/homework.392a1213.png\";"],"sourceRoot":""}